name: Build & Deploy
env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'FunctionApps/Azure functions'
  DOTNET_VERSION: 8.0.x
  OUTPUT_PATH: ${{ github.workspace }}/.output

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish Functions
      run: |
        cd "./FunctionApps/Azure functions"
        dotnet publish FunctionAppPOCTestOptum.csproj --configuration Release --output ${{ env.OUTPUT_PATH }}

    - name: Package Functions
      uses: actions/upload-artifact@v1
      with:
        name: functions
        path: ${{ env.OUTPUT_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      FUNC_APP_NAME: FunctionAppDeploymentPOCTest
      RESOURCE_GROUP: DynamicsDeployments-eastus
      OUTPUT_PATH: ${{ github.workspace }}/.output
  
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Function to Azure
        run: |
          az functionapp config appsettings set --name ${{ env.FUNC_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
          az functionapp deployment source config-cs --name ${{ env.FUNC_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --src ${{ env.OUTPUT_PATH }}/FunctionApps/Azure functions

